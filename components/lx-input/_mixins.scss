@import "./variables";

@mixin lx-input-states-primary($state, $theme, $color) {
    @if $state == state-default {
        @if $theme == dark {
            background-color: lx-theme-color-variant($color, N);
            color: lx-theme-best-color(lx-theme-color-variant($color, N));
        }

        @else if $theme == light {
            background-color: lx-theme-color-variant($theme, N);
            color: lx-theme-color-variant($color, N);
        }
    }

    @else if $state == state-hover {
        @if $theme == dark {
            background-color: lx-theme-color-variant($color, D1);
        }

        @else if $theme == light {
            background-color: lx-theme-color-variant($theme, L1);
        }
    }

    @else if $state == state-active {
        @if $theme == dark {
            background-color: lx-theme-color-variant($color, D2);
        }

        @else if $theme == light {
            background-color: lx-theme-color-variant($theme, L2);
        }
    }

    @else if $state == state-focus {
        @if $theme == dark {
            box-shadow: 0 0 0 2px lx-theme-color-variant($color, L3);
        }

        @else if $theme == light {
            box-shadow: 0 0 0 2px lx-theme-color-variant($theme, L3);
        }
    }

    @else if $state == state-disabled {
        color: lx-theme-best-color(lx-theme-color-variant($color, L3));

        @if $theme == dark {
            background-color: lx-theme-color-variant($color, L3);
        }

        @else if $theme == light {
            background-color: lx-theme-color-variant($theme, L3);
        }
    }
}

@mixin lx-input-states-tertiary($state, $theme) {
    @if $state == state-default {
        background-color: transparent;
        color: lx-theme-color-variant($theme, N);
    }

    @else if $state == state-hover {
        background-color: lx-theme-color-variant($theme, L6);
    }

    @else if $state == state-active {
        background-color: lx-theme-color-variant($theme, L5);
    }

    @else if $state == state-focus {
        box-shadow: 0 0 0 2px lx-theme-color-variant($theme, L3);
    }

    @else if $state == state-disabled {
        color: lx-theme-color-variant($theme, L3);
    }
}

@mixin lx-input-states-secondary($state, $theme) {
    @include lx-input-states-tertiary($state, $theme);

    @if $state == state-default {
        border-color: lx-theme-color-variant($theme, N);
    }

    @else if $state == state-disabled {
        border-color: lx-theme-color-variant($theme, L3);
    }
}

@mixin lx-input-states-disabled-text($theme) {
    color: lx-theme-color-variant($theme, L3);
    pointer-events: none;
}

@mixin lx-input-states($type, $state, $theme, $color: null) {
    @if $type == primary {
        @include lx-input-states-primary($state, $theme, $color);
    }

    @else if $type == secondary {
        @include lx-input-states-secondary($state, $theme);
    }

    @else if $type == tertiary {
        @include lx-input-states-tertiary($state, $theme);
    }
}

@mixin lx-input-states-transitions() {
    transition:
        background-color $lx-input-states-transition-duration,
        color $lx-input-states-transition-duration;
}

@mixin lx-input-label($theme) {
    @include lx-typography(body1);

    display: block;
    color: lx-theme-color-variant($theme, N);
}

@mixin lx-input-helper($theme) {
    @include lx-typography(caption);

    display: block;
    margin-top: $lx-base-spacing-unit / 2;
    color: lx-theme-color-variant($theme, L2);
}
