@import "./variables";

@mixin lx-button-base() {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    border: none;
    margin: 0;
    outline: none;
    text-decoration: none;
    user-select: none;
    vertical-align: middle;

    &:hover {
        cursor: pointer;
    }

    &:disabled {
        pointer-events: none;
    }
}

@mixin lx-button-size($size, $type, $shape: contained) {
    height: map-get($lx-button-sizes, $size);
    border-radius: map-get($lx-button-sizes, $size) / 2;

    @if $shape == contained {
        padding: 0 $lx-button-horizontal-padding;
    }

    @if $shape == circled {
        width: map-get($lx-button-sizes, $size);
    }
}

@mixin lx-button-color($color, $type, $theme: dark) {
    @include lx-input-states-transitions;
    @include lx-input-states($type, map-get($lx-input-states, default), $theme, $color);

    @if $type == secondary {
        border-style: solid;
        border-width: 1px;
    }

    &:hover {
        @include lx-input-states($type, map-get($lx-input-states, hover), $theme, $color);
    }

    &:active {
        @include lx-input-states($type, map-get($lx-input-states, active), $theme, $color);
    }

    &[data-focus-visible-added] {
        @include lx-input-states($type, map-get($lx-input-states, focus), $theme, $color);
    }

    &:disabled {
        @include lx-input-states($type, map-get($lx-input-states, disabled), $theme, $color);
    }
}

@mixin lx-button-icon($size) {
    font-size: map-get($lx-button-icon-sizes, $size);
}

@mixin lx-button-text($size, $type) {
    font-size: map-get($lx-button-text-sizes, $size);
    font-weight: 600;

    @if $type == primary {
        line-height: map-get($lx-button-sizes, $size);
    }

    @else if $type == secondary {
        line-height: map-get($lx-button-sizes, $size) - 2;
    }
}
