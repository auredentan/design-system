@import "./variables";

@mixin lx-button-base() {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    border: none;
    margin: 0;
    outline: none;
    text-decoration: none;
    user-select: none;
    vertical-align: middle;

    &:hover {
        cursor: pointer;
    }

    &:disabled {
        pointer-events: none;
    }
}

@mixin lx-button-size($size, $type, $shape: contained) {
    height: map-get($lx-button-sizes, $size);
    border-radius: map-get($lx-button-sizes, $size) / 2;

    @if $shape == contained {
        padding: 0 $lx-button-horizontal-padding;
    }

    @if $shape == circled {
        width: map-get($lx-button-sizes, $size);
    }

    &::after {
        position: absolute;
        border-color: transparent;
        border-radius: (map-get($lx-button-sizes, $size) + 8) / 2;
        border-style: dotted;
        border-width: 1px;
        content: '';
        pointer-events: none;
        transition: border-color $lx-button-transition-duration;
    }

    @if $type == primary {
        &::after {
            top: -4px;
            right: -4px;
            bottom: -4px;
            left: -4px;
        }
    }

    @if $type == secondary {
        &::after {
            top: -5px;
            right: -5px;
            bottom: -5px;
            left: -5px;
        }
    }
}

@mixin lx-button-color($color, $type, $theme: dark) {
    transition: background-color $lx-button-transition-duration;

    @if $type == primary {
        @if $theme == dark {
            background-color: lx-theme-color-variant($color, N);
            color: lx-theme-best-color(lx-theme-color-variant($color, N));
        }

        @else if $theme == light {
            background-color: lx-theme-color-variant(light, N);
            color: lx-theme-color-variant($color, N);
        }

        &:hover {
            @if $theme == dark {
                background-color: lx-theme-color-variant($color, D1);
            }

            @else if $theme == light {
                background-color: lx-theme-color-variant(light, L1);
            }
        }

        &[data-focus-visible-added] {
            @if $theme == dark {
                &::after {
                    border-color: lx-theme-color-variant($color, N);
                }
            }

            @else if $theme == light {
                &::after {
                    border-color: lx-theme-color-variant(light, N);
                }
            }
        }

        &:active {
            @if $theme == dark {
                background-color: lx-theme-color-variant($color, D2);
            }

            @else if $theme == light {
                background-color: lx-theme-color-variant(light, L2);
            }
        }

        &:disabled {
            @if $theme == dark {
                background-color: lx-theme-color-variant($color, L3);
            }

            @else if $theme == light {
                background-color: lx-theme-color-variant(light, L4);
                color: lx-theme-color-variant(light, L3);
            }
        }
    }

    @else if $type == secondary {
        border: 1px solid lx-theme-color-variant($theme, N);
        background-color: transparent;
        color: lx-theme-color-variant($theme, N);

        &:hover {
            background-color: lx-theme-color-variant($theme, L6);
        }

        &[data-focus-visible-added] {
            &::after {
                border-color: lx-theme-color-variant($theme, L1);
            }
        }

        &:active {
            background-color: lx-theme-color-variant($theme, L5);
        }

        &:disabled {
            border-color: lx-theme-color-variant($theme, L3);
            color: lx-theme-color-variant($theme, L3);
        }
    }
}

@mixin lx-button-icon($size) {
    font-size: map-get($lx-button-icon-sizes, $size);
}

@mixin lx-button-icon-sibling() {
    margin-right: $lx-base-spacing-unit;
}

@mixin lx-button-text($size, $type) {
    font-size: map-get($lx-button-text-sizes, $size);
    font-weight: 600;

    @if $type == primary {
        line-height: map-get($lx-button-sizes, $size);
    }

    @else if $type == secondary {
        line-height: map-get($lx-button-sizes, $size) - 2;
    }
}
