/// Tabs base mixin to apply global structure
@mixin lx-tabs-base() {
    .lx-tabs__links {
        display: flex;
        border-bottom-style: solid;
        border-bottom-width: 2px;
    }

    .lx-tabs__link {
        position: relative;
        display: flex;
        height: 48px;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        outline: none;
        transition: color 0.2s;

        &::after {
            position: absolute;
            right: 0;
            bottom: -2px;
            left: 0;
            height: 2px;
            content: '';
        }

        i {
            margin-right: $lx-base-spacing-unit;
            font-size: 20px;
        }

        span {
            font-size: 14px;
            font-weight: 600;
        }
    }
}

/// Tabs layout mixin to set links style and position according
///
/// @param {String} $layout - The tabs layoutn either fixed or clustered
/// @param {String} $position - The links position in clustered layout, either left, center or right
@mixin lx-tabs-layout($layout, $position: null) {
    @if $layout == fixed {
        .lx-tabs__link {
            flex: 1;
        }
    }

    @else if $layout == clustered {
        .lx-tabs__links {
            @if $position == left {
                justify-content: flex-start;
            }

            @else if $position == center {
                justify-content: center;
            }

            @else if $position == right {
                justify-content: flex-end;
            }
        }

        .lx-tabs__link {
            padding: 0 $lx-base-spacing-unit * 3;
        }
    }
}

/// Tabs theme mixin to style links
///
/// @param {String} $theme - The tabs theme, either dark or light
@mixin lx-tabs-theme($theme: dark) {
    color: lx-theme-color-variant($theme, n);

    .lx-tabs__links {
        border-bottom-color: lx-theme-color-variant($theme, l5);
    }

    // Default state
    @if $theme == dark {
        .lx-tabs__link {
            color: lx-theme-color-variant(dark, n);
        }
    }

    @else if $theme == light {
        .lx-tabs__link {
            color: lx-theme-color-variant(light, l2);
        }
    }

    // Hover state
    @if $theme == dark {
        .lx-tabs__link:not(.lx-tabs__link--is-disabled):not(.lx-tabs__link--is-active):hover {
            color: lx-theme-color-variant(primary, n);
        }
    }

    @else if $theme == light {
        .lx-tabs__link:not(.lx-tabs__link--is-disabled):not(.lx-tabs__link--is-active):hover {
            color: lx-theme-color-variant(light, n);
        }
    }

    // Focus state
    @if $theme == dark {
        .lx-tabs__link:not(.lx-tabs__link--is-active)[data-focus-visible-added] {
            box-shadow: 0 0 0 2px lx-theme-color-variant(primary, l3);
        }
    }

    @else if $theme == light {
        .lx-tabs__link:not(.lx-tabs__link--is-active)[data-focus-visible-added] {
            box-shadow: 0 0 0 2px lx-theme-color-variant(light, l3);
        }
    }

    // Active state
    @if $theme == dark {
        .lx-tabs__link--is-active {
            color: lx-theme-color-variant(primary, n);

            &::after {
                background-color: lx-theme-color-variant(primary, n);
            }
        }
    }

    @else if $theme == light {
        .lx-tabs__link--is-active {
            color: lx-theme-color-variant(light, n);

            &::after {
                background-color: lx-theme-color-variant(light, n);
            }
        }
    }

    // Disabled state
    .lx-tabs__link--is-disabled {
        color: lx-theme-color-variant($theme, l3);
    }
}
