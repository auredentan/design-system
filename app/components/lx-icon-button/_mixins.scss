@import "./variables";

@mixin lx-icon-button-size($width, $height: $width, $padding: max($width, $height)/2) {
    width: $width + $padding * 2;
    height: $height + $padding * 2;
    font-size: lx-typography-to-rem(max($width, $height));
}

@mixin lx-icon-button-base() {
    @include lx-icon-button-size($lx-icon-button-size);

    display: inline-flex;
    position: relative;
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    border-radius: 50%;
    border: none;
    background-color: transparent;
    outline: none;
    text-decoration: none;

    line-height: inherit;
    user-select: none;
    -webkit-appearance: none;
    overflow: hidden;
    vertical-align: middle;

    &::-moz-focus-inner {
        padding: 0;
        border: 0;
    }

    &:active {
        outline: none;
    }

    &:hover {
        cursor: pointer;
    }

    &:disabled {
        cursor: default;
        pointer-events: none;
    }
}

@mixin lx-icon-button--dark() {
    color: #000;

    &:hover:before {
        background-color: rgba(#000, map-get($lx-ripple-light-opacities, hover));
    }

    &:focus:before {
        background-color: rgba(#000, map-get($lx-ripple-light-opacities, focus));
    }

    #{$lx-ripple-identifier} {
        background-color: rgba(#000, map-get($lx-ripple-light-opacities, ripple));
    }

    &:disabled {
        color: rgba(#000, map-get($lx-theme-text-opacities, disabled));
    }
}

@mixin lx-icon-button--light() {
    color: #fff;

    &:hover:before {
        background-color: rgba(#fff, map-get($lx-ripple-dark-opacities, hover));
    }

    &:focus:before {
        background-color: rgba(#fff, map-get($lx-ripple-dark-opacities, focus));
    }

    #{$lx-ripple-identifier} {
        background-color: rgba(#fff, map-get($lx-ripple-dark-opacities, ripple));
    }

    &:disabled {
        color: rgba(#fff, map-get($lx-theme-text-opacities, disabled));
    }
}
