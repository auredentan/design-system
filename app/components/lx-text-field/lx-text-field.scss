/* ==========================================================================
   Text field
   ========================================================================== */

@import "./mixins";

.lx-text-field {
    &__label {
        display: block;
        margin-bottom: $lx-base-spacing-unit;
        font-size: lx-typography-to-rem(12px);
    }

    &__input {
        position: relative;
        display: inline-flex;
        overflow: hidden;
        height: $lx-text-field-height;
        border-radius: 2px;

        &::after {
            position: absolute;
            right: 0;
            bottom: 0;
            left: 0;
            height: 2px;
            content: '';
            transform: scaleX(0);
            transition: transform 0.2s;
        }
    }

    &__native-control input {
        @include lx-text-field-base;
    }

    &__suffix {
        padding: 0 $lx-text-field-horizontal-padding;
        font-size: lx-typography-to-rem(16px);
        font-weight: 400;
        line-height: lx-typography-to-rem($lx-text-field-height);
    }
}

/* Text field themes
   ========================================================================== */

.lx-text-field--medium {
    .lx-text-field__label {
        color: rgba(#000, map-get($lx-theme-dark-text-opacities, medium));
    }

    .lx-text-field__input {
        background-color: rgba(#000, 0.04);

        &::after {
            background-color: map-get($lx-theme-colors, primary);
        }
    }

    .lx-text-field__native-control input {
        color: rgba(#000, map-get($lx-theme-dark-text-opacities, high));

        &::placeholder {
            color: rgba(#000, map-get($lx-theme-dark-text-opacities, disabled));
        }
    }

    .lx-text-field__suffix {
        color: rgba(#000, map-get($lx-theme-dark-text-opacities, medium));
    }
}

.lx-text-field--light {
    .lx-text-field__label {
        color: rgba(#000, map-get($lx-theme-dark-text-opacities, medium));
    }

    .lx-text-field__input {
        background-color: #fff;

        &::after {
            background-color: map-get($lx-theme-colors, primary);
        }
    }

    .lx-text-field__native-control input {
        color: rgba(#000, map-get($lx-theme-dark-text-opacities, high));

        &::placeholder {
            color: rgba(#000, map-get($lx-theme-dark-text-opacities, disabled));
        }
    }

    .lx-text-field__suffix {
        color: rgba(#000, map-get($lx-theme-dark-text-opacities, medium));
    }
}

.lx-text-field--dark {
    .lx-text-field__label {
        color: rgba(#fff, map-get($lx-theme-light-text-opacities, medium));
    }

    .lx-text-field__input {
        background-color: rgba(#fff, 0.3);

        &::after {
            background-color: #fff;
        }
    }

    .lx-text-field__native-control input {
        color: rgba(#fff, map-get($lx-theme-light-text-opacities, high));

        &::placeholder {
            color: rgba(#fff, map-get($lx-theme-light-text-opacities, disabled));
        }
    }

    .lx-text-field__suffix {
        color: rgba(#fff, map-get($lx-theme-light-text-opacities, medium));
    }
}

/* Text field states
   ========================================================================== */

.lx-text-field--is-focus {
    .lx-text-field__input::after {
        transform: scaleX(1);
    }
}

.lx-text-field--is-disabled.lx-text-field--medium,
.lx-text-field--is-disabled.lx-text-field--light {
    .lx-text-field__label,
    .lx-text-field__native-control input,
    .lx-text-field__suffix {
        color: rgba(#000, map-get($lx-theme-dark-text-opacities, disabled));
    }

    .lx-text-field__input {
        background-color: rgba(#000, 0.08);
    }
}

.lx-text-field--is-disabled.lx-text-field--dark {
    .lx-text-field__label,
    .lx-text-field__native-control input,
    .lx-text-field__suffix {
        color: rgba(#fff, map-get($lx-theme-dark-text-opacities, disabled));
    }

    .lx-text-field__input {
        background-color: rgba(#fff, 0.12);
    }
}
